from aiogram import Bot, Router, F
from aiogram.types import CallbackQuery, LabeledPrice
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from database import requests
from keyboards import get_main_kb, get_buy_credits_kb, PurchaseOptionsCD
from config_reader import settings
from states import CommunicationSG


router = Router()


@router.callback_query(F.data == "start_chat")
async def start_chat(
    callback: CallbackQuery,
    state: FSMContext
):
    await callback.answer()
    await callback.message.answer(
        "–û–∫! –ü—Ä–∏—à–ª–∏ –ø–µ—Ä–µ–ø–∏—Å–∫—É ‚Äî —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ —Å–∫—Ä–∏–Ω–∞–º–∏. –Ø –ø–æ–º–æ–≥—É –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –æ–Ω–∞ –∫ —Ç–µ–±–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è, –∏ –ø—Ä–µ–¥–ª–æ–∂—É –ª—É—á—à–∏–µ –æ—Ç–≤–µ—Ç—ã.",
    )
    await state.set_state(CommunicationSG.correspondence)


@router.callback_query(F.data == "girl_profile")
async def girl_profile(
    callback: CallbackQuery,
    state: FSMContext
):
    await callback.answer()
    await callback.message.answer(
        "–ü—Ä–∏—à–ª–∏ –∞–Ω–∫–µ—Ç—É –¥–µ–≤—É—à–∫–∏: —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ. –Ø —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫–∞—è –æ–Ω–∞, —á–µ–º —É–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏ –∫–∞–∫ –ª—É—á—à–µ –∑–∞–≤–µ—Å—Ç–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä.",
    )
    await state.set_state(CommunicationSG.girl_analysis)


@router.callback_query(F.data == "my_profile")
async def my_profile(
    callback: CallbackQuery,
    state: FSMContext
):
    await callback.answer()
    await callback.message.answer(
        "–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. –ü—Ä–∏—à–ª–∏ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ, –∏ —è —Å–∫–∞–∂—É, —á—Ç–æ —Å—É–ø–µ—Ä, –∞ —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–¥—Ç—è–Ω—É—Ç—å.",
    )
    await state.set_state(CommunicationSG.my_analysis)


@router.callback_query(F.data == "awkward_pauses")
async def awkward_pauses(
    callback: CallbackQuery,
    state: FSMContext
):
    await callback.answer()
    await callback.message.answer(
        "–û–ø–∏—à–∏, –≥–¥–µ –≤—ã —Å–µ–π—á–∞—Å (—á–∞—Ç –∏–ª–∏ —Å–≤–∏–¥–∞–Ω–∏–µ) –∏ —á—Ç–æ –æ–±—Å—É–∂–¥–∞–ª–∏. –Ø –ø–æ–¥–∫–∏–Ω—É —Ç–µ–º—ã, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–∞—É–∑—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤–∞–π–±.",
    )
    await state.set_state(CommunicationSG.pause)


@router.callback_query(F.data == "check")
async def check_sub(
    callback: CallbackQuery,
    bot: Bot
):
    info = await bot.get_chat_member(
        f"@{settings.tg_channel_link}",
        callback.from_user.id
    )
    if info.status == "left":
        await callback.answer(
            "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª!",
            show_alert=True
        )
        return
    await callback.answer()
    await callback.message.answer("–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º –æ–±—â–∞—Ç—å—Å—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ üòâ")


@router.callback_query(F.data == "buy_credits")
async def buy_credits(
    callback: CallbackQuery,
):
    await callback.answer()
    await callback.message.answer(
        "–í—ã–±–µ—Ä–∏ –ø–∞–∫–µ—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:",
        reply_markup=get_buy_credits_kb()
    )


@router.callback_query(PurchaseOptionsCD.filter())
async def buy_credits(
    callback: CallbackQuery,
    callback_data: PurchaseOptionsCD,
):
    await callback.answer()
    await callback.message.answer_invoice(
        f"–ü–∞–∫–µ—Ç –Ω–∞ {callback_data.tokens} —Ç–æ–∫–µ–Ω–æ–≤",
        f"–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞: –ü–∞–∫–µ—Ç –Ω–∞ {callback_data.tokens} —Ç–æ–∫–µ–Ω–æ–≤",
        payload=f"{callback_data.amount}_{callback_data.tokens}",
        provider_token=settings.provider_token,
        currency="XTR",
        prices=[LabeledPrice(label="XTR", amount=callback_data.amount)]
    )


@router.callback_query(F.data == "show_balance")
async def show_balance(
    callback: CallbackQuery,
    session: AsyncSession,
):
    await callback.answer()
    user = await requests.get_user(session, callback.from_user.id)
    await callback.message.answer(
        f"""
üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {user.requests} —Ç–æ–∫–µ–Ω(–æ–≤).
1 —Ç–æ–∫–µ–Ω = 1 –æ—Ç–≤–µ—Ç –í–∞–ª–µ—Ä—ã.

üéÅ –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ –∏ –≤—ã –æ–±–∞ –ø–æ–ª—É—á–∏—Ç–µ +10 —Ç–æ–∫–µ–Ω–æ–≤!

üîó –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –ø–µ—Ä–µ–π–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª ¬´–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞¬ª.
        """
    )


@router.callback_query(F.data == "show_referral")
async def show_referral(
    callback: CallbackQuery,
    bot: Bot
):
    await callback.answer()
    info = await bot.get_me()
    await callback.message.answer(
        "üîó –¢–≤–æ—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
        f"https://t.me/{info.username}?start=r_{callback.from_user.id}\n\n"
        "–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ –∏ –≤—ã –æ–±–∞ –ø–æ–ª—É—á–∏—Ç–µ +10 —Ç–æ–∫–µ–Ω–æ–≤!"
    )
